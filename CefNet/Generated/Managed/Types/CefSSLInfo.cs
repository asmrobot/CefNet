// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_sslinfo_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;
using CefNet.CApi;
using CefNet.Internal;

namespace CefNet
{
	/// <summary>
	/// Structure representing SSL information.
	/// </summary>
	/// <remarks>
	/// Role: Proxy
	/// </remarks>
	public unsafe partial class CefSSLInfo : CefBaseRefCounted<cef_sslinfo_t>
	{
		internal static unsafe CefSSLInfo Create(IntPtr instance)
		{
			return new CefSSLInfo((cef_sslinfo_t*)instance);
		}

		public CefSSLInfo(cef_sslinfo_t* instance)
			: base((cef_base_ref_counted_t*)instance)
		{
		}

		/// <summary>
		/// Gets a bitmask containing any and all problems verifying the server
		/// certificate.
		/// </summary>
		public unsafe virtual CefCertStatus CertStatus
		{
			get
			{
				return SafeCall(NativeInstance->GetCertStatus());
			}
		}

		/// <summary>
		/// Gets the X.509 certificate.
		/// </summary>
		public unsafe virtual CefX509Certificate X509certificate
		{
			get
			{
				return SafeCall(CefX509Certificate.Wrap(CefX509Certificate.Create, NativeInstance->GetX509certificate()));
			}
		}
	}
}
