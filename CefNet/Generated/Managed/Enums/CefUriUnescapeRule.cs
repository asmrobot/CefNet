// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/internal/cef_types.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;

namespace CefNet
{
	/// <summary>
	/// URI unescape rules passed to CefURIDecode().
	/// </summary>
	[Flags]
	public enum CefUriUnescapeRule
	{
		/// <summary>
		/// Don&apos;t unescape anything at all.
		/// </summary>
		None = 0,

		/// <summary>
		/// Don&apos;t unescape anything special, but all normal unescaping will happen.
		/// This is a placeholder and can&apos;t be combined with other flags (since it&apos;s
		/// just the absence of them). All other unescape rules imply &quot;normal&quot; in
		/// addition to their special meaning. Things like escaped letters, digits,
		/// and most symbols will get unescaped with this mode.
		/// </summary>
		Normal = 1 << 0,

		/// <summary>
		/// Convert %20 to spaces. In some places where we&apos;re showing URLs, we may
		/// want this. In places where the URL may be copied and pasted out, then
		/// you wouldn&apos;t want this since it might not be interpreted in one piece
		/// by other applications.
		/// </summary>
		Spaces = 1 << 1,

		/// <summary>
		/// Unescapes &apos;/&apos; and &apos;
		/// \
		/// &apos;. If these characters were unescaped, the resulting
		/// URL won&apos;t be the same as the source one. Moreover, they are dangerous to
		/// unescape in strings that will be used as file paths or names. This value
		/// should only be used when slashes don&apos;t have special meaning, like data
		/// URLs.
		/// </summary>
		PathSeparators = 1 << 2,

		/// <summary>
		/// Unescapes various characters that will change the meaning of URLs,
		/// including &apos;%&apos;, &apos;+&apos;, &apos;
		/// &amp;
		/// &apos;, &apos;#&apos;. Does not unescape path separators.
		/// If these characters were unescaped, the resulting URL won&apos;t be the same
		/// as the source one. This flag is used when generating final output like
		/// filenames for URLs where we won&apos;t be interpreting as a URL and want to do
		/// as much unescaping as possible.
		/// </summary>
		UrlSpecialCharsExceptPathSeparators = 1 << 3,

		/// <summary>
		/// URL queries use &quot;+&quot; for space. This flag controls that replacement.
		/// </summary>
		ReplacePlusWithSpace = 1 << 4,
	}
}

