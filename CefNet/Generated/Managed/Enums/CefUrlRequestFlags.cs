// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/internal/cef_types.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;

namespace CefNet
{
	/// <summary>
	/// Flags used to customize the behavior of CefURLRequest.
	/// </summary>
	[Flags]
	public enum CefUrlRequestFlags
	{
		/// <summary>
		/// Default behavior.
		/// </summary>
		None = 0,

		/// <summary>
		/// If set the cache will be skipped when handling the request. Setting this
		/// value is equivalent to specifying the &quot;Cache-Control: no-cache&quot; request
		/// header. Setting this value in combination with UR_FLAG_ONLY_FROM_CACHE will
		/// cause the request to fail.
		/// </summary>
		SkipCache = 1 << 0,

		/// <summary>
		/// If set the request will fail if it cannot be served from the cache (or some
		/// equivalent local store). Setting this value is equivalent to specifying the
		/// &quot;Cache-Control: only-if-cached&quot; request header. Setting this value in
		/// combination with UR_FLAG_SKIP_CACHE or UR_FLAG_DISABLE_CACHE will cause the
		/// request to fail.
		/// </summary>
		OnlyFromCache = 1 << 1,

		/// <summary>
		/// If set the cache will not be used at all. Setting this value is equivalent
		/// to specifying the &quot;Cache-Control: no-store&quot; request header. Setting this
		/// value in combination with UR_FLAG_ONLY_FROM_CACHE will cause the request to
		/// fail.
		/// </summary>
		DisableCache = 1 << 2,

		/// <summary>
		/// If set user name, password, and cookies may be sent with the request, and
		/// cookies may be saved from the response.
		/// </summary>
		AllowStoredCredentials = 1 << 3,

		/// <summary>
		/// If set upload progress events will be generated when a request has a body.
		/// </summary>
		ReportUploadProgress = 1 << 4,

		/// <summary>
		/// If set the CefURLRequestClient::OnDownloadData method will not be called.
		/// </summary>
		NoDownloadData = 1 << 5,

		/// <summary>
		/// If set 5XX redirect errors will be propagated to the observer instead of
		/// automatically re-tried. This currently only applies for requests
		/// originated in the browser process.
		/// </summary>
		NoRetryOn5xx = 1 << 6,

		/// <summary>
		/// If set 3XX responses will cause the fetch to halt immediately rather than
		/// continue through the redirect.
		/// </summary>
		StopOnRedirect = 1 << 7,
	}
}

