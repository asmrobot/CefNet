// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Managed/Types/CefRequestContextHandler.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

.namespace CefNet
{
	.class public CefRequestContextHandler
	{

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRequestContextHandlerPrivate.AvoidOnRequestContextInitialized()
		{
			.override method instance bool CefNet.Internal.ICefRequestContextHandlerPrivate::AvoidOnRequestContextInitialized()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefRequestContextHandler::OnRequestContextInitialized(class CefNet.CefRequestContext)
			ldftn instance void CefNet.CefRequestContextHandler::OnRequestContextInitialized(class CefNet.CefRequestContext)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRequestContextHandlerPrivate.AvoidGetResourceRequestHandler()
		{
			.override method instance bool CefNet.Internal.ICefRequestContextHandlerPrivate::AvoidGetResourceRequestHandler()
			.maxstack 2
			ldarg.0
			ldvirtftn instance class CefNet.CefResourceRequestHandler CefNet.CefRequestContextHandler::GetResourceRequestHandler(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefRequest, bool, bool, string, int32&)
			ldftn instance class CefNet.CefResourceRequestHandler CefNet.CefRequestContextHandler::GetResourceRequestHandler(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefRequest, bool, bool, string, int32&)
			ceq
			ret
		}

	}
}
