// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Managed/Types/CefRenderProcessHandler.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

.namespace CefNet
{
	.class public CefRenderProcessHandler
	{

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate.AvoidOnBrowserCreated()
		{
			.override method instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate::AvoidOnBrowserCreated()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefRenderProcessHandler::OnBrowserCreated(class CefNet.CefBrowser, class CefNet.CefDictionaryValue)
			ldftn instance void CefNet.CefRenderProcessHandler::OnBrowserCreated(class CefNet.CefBrowser, class CefNet.CefDictionaryValue)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate.AvoidOnBrowserDestroyed()
		{
			.override method instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate::AvoidOnBrowserDestroyed()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefRenderProcessHandler::OnBrowserDestroyed(class CefNet.CefBrowser)
			ldftn instance void CefNet.CefRenderProcessHandler::OnBrowserDestroyed(class CefNet.CefBrowser)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate.AvoidOnContextCreated()
		{
			.override method instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate::AvoidOnContextCreated()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefRenderProcessHandler::OnContextCreated(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefV8Context)
			ldftn instance void CefNet.CefRenderProcessHandler::OnContextCreated(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefV8Context)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate.AvoidOnContextReleased()
		{
			.override method instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate::AvoidOnContextReleased()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefRenderProcessHandler::OnContextReleased(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefV8Context)
			ldftn instance void CefNet.CefRenderProcessHandler::OnContextReleased(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefV8Context)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate.AvoidOnUncaughtException()
		{
			.override method instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate::AvoidOnUncaughtException()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefRenderProcessHandler::OnUncaughtException(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefV8Context, class CefNet.CefV8Exception, class CefNet.CefV8StackTrace)
			ldftn instance void CefNet.CefRenderProcessHandler::OnUncaughtException(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefV8Context, class CefNet.CefV8Exception, class CefNet.CefV8StackTrace)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate.AvoidOnFocusedNodeChanged()
		{
			.override method instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate::AvoidOnFocusedNodeChanged()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefRenderProcessHandler::OnFocusedNodeChanged(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefDOMNode)
			ldftn instance void CefNet.CefRenderProcessHandler::OnFocusedNodeChanged(class CefNet.CefBrowser, class CefNet.CefFrame, class CefNet.CefDOMNode)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate.AvoidOnProcessMessageReceived()
		{
			.override method instance bool CefNet.Internal.ICefRenderProcessHandlerPrivate::AvoidOnProcessMessageReceived()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefRenderProcessHandler::OnProcessMessageReceived(class CefNet.CefBrowser, class CefNet.CefFrame, valuetype CefNet.CefProcessId, class CefNet.CefProcessMessage)
			ldftn instance bool CefNet.CefRenderProcessHandler::OnProcessMessageReceived(class CefNet.CefBrowser, class CefNet.CefFrame, valuetype CefNet.CefProcessId, class CefNet.CefProcessMessage)
			ceq
			ret
		}

	}
}
