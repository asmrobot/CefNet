// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Managed/Types/CefResourceHandler.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

.namespace CefNet
{
	.class public CefResourceHandler
	{

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefResourceHandlerPrivate.AvoidOpen()
		{
			.override method instance bool CefNet.Internal.ICefResourceHandlerPrivate::AvoidOpen()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefResourceHandler::Open(class CefNet.CefRequest, int32&, class CefNet.CefCallback)
			ldftn instance bool CefNet.CefResourceHandler::Open(class CefNet.CefRequest, int32&, class CefNet.CefCallback)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefResourceHandlerPrivate.AvoidProcessRequest()
		{
			.override method instance bool CefNet.Internal.ICefResourceHandlerPrivate::AvoidProcessRequest()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefResourceHandler::ProcessRequest(class CefNet.CefRequest, class CefNet.CefCallback)
			ldftn instance bool CefNet.CefResourceHandler::ProcessRequest(class CefNet.CefRequest, class CefNet.CefCallback)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefResourceHandlerPrivate.AvoidGetResponseHeaders()
		{
			.override method instance bool CefNet.Internal.ICefResourceHandlerPrivate::AvoidGetResponseHeaders()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefResourceHandler::GetResponseHeaders(class CefNet.CefResponse, int64&, string&)
			ldftn instance void CefNet.CefResourceHandler::GetResponseHeaders(class CefNet.CefResponse, int64&, string&)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefResourceHandlerPrivate.AvoidSkip()
		{
			.override method instance bool CefNet.Internal.ICefResourceHandlerPrivate::AvoidSkip()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefResourceHandler::Skip(int64, int64&, class CefNet.CefResourceSkipCallback)
			ldftn instance bool CefNet.CefResourceHandler::Skip(int64, int64&, class CefNet.CefResourceSkipCallback)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefResourceHandlerPrivate.AvoidRead()
		{
			.override method instance bool CefNet.Internal.ICefResourceHandlerPrivate::AvoidRead()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefResourceHandler::Read(native int, int32, int32&, class CefNet.CefResourceReadCallback)
			ldftn instance bool CefNet.CefResourceHandler::Read(native int, int32, int32&, class CefNet.CefResourceReadCallback)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefResourceHandlerPrivate.AvoidReadResponse()
		{
			.override method instance bool CefNet.Internal.ICefResourceHandlerPrivate::AvoidReadResponse()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefResourceHandler::ReadResponse(native int, int32, int32&, class CefNet.CefCallback)
			ldftn instance bool CefNet.CefResourceHandler::ReadResponse(native int, int32, int32&, class CefNet.CefCallback)
			ceq
			ret
		}

	}
}
