// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Managed/Types/CefAccessibilityHandler.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

.namespace CefNet
{
	.class public CefAccessibilityHandler
	{

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefAccessibilityHandlerPrivate.AvoidOnAccessibilityTreeChange()
		{
			.override method instance bool CefNet.Internal.ICefAccessibilityHandlerPrivate::AvoidOnAccessibilityTreeChange()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefAccessibilityHandler::OnAccessibilityTreeChange(class CefNet.CefValue)
			ldftn instance void CefNet.CefAccessibilityHandler::OnAccessibilityTreeChange(class CefNet.CefValue)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefAccessibilityHandlerPrivate.AvoidOnAccessibilityLocationChange()
		{
			.override method instance bool CefNet.Internal.ICefAccessibilityHandlerPrivate::AvoidOnAccessibilityLocationChange()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefAccessibilityHandler::OnAccessibilityLocationChange(class CefNet.CefValue)
			ldftn instance void CefNet.CefAccessibilityHandler::OnAccessibilityLocationChange(class CefNet.CefValue)
			ceq
			ret
		}

	}
}
