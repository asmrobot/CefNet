// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Managed/Types/CefExtensionHandler.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

.namespace CefNet
{
	.class public CefExtensionHandler
	{

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefExtensionHandlerPrivate.AvoidOnExtensionLoadFailed()
		{
			.override method instance bool CefNet.Internal.ICefExtensionHandlerPrivate::AvoidOnExtensionLoadFailed()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefExtensionHandler::OnExtensionLoadFailed(valuetype CefNet.CefErrorCode)
			ldftn instance void CefNet.CefExtensionHandler::OnExtensionLoadFailed(valuetype CefNet.CefErrorCode)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefExtensionHandlerPrivate.AvoidOnExtensionLoaded()
		{
			.override method instance bool CefNet.Internal.ICefExtensionHandlerPrivate::AvoidOnExtensionLoaded()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefExtensionHandler::OnExtensionLoaded(class CefNet.CefExtension)
			ldftn instance void CefNet.CefExtensionHandler::OnExtensionLoaded(class CefNet.CefExtension)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefExtensionHandlerPrivate.AvoidOnExtensionUnloaded()
		{
			.override method instance bool CefNet.Internal.ICefExtensionHandlerPrivate::AvoidOnExtensionUnloaded()
			.maxstack 2
			ldarg.0
			ldvirtftn instance void CefNet.CefExtensionHandler::OnExtensionUnloaded(class CefNet.CefExtension)
			ldftn instance void CefNet.CefExtensionHandler::OnExtensionUnloaded(class CefNet.CefExtension)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefExtensionHandlerPrivate.AvoidOnBeforeBackgroundBrowser()
		{
			.override method instance bool CefNet.Internal.ICefExtensionHandlerPrivate::AvoidOnBeforeBackgroundBrowser()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefExtensionHandler::OnBeforeBackgroundBrowser(class CefNet.CefExtension, string, class CefNet.CefClient&, class CefNet.CefBrowserSettings)
			ldftn instance bool CefNet.CefExtensionHandler::OnBeforeBackgroundBrowser(class CefNet.CefExtension, string, class CefNet.CefClient&, class CefNet.CefBrowserSettings)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefExtensionHandlerPrivate.AvoidOnBeforeBrowser()
		{
			.override method instance bool CefNet.Internal.ICefExtensionHandlerPrivate::AvoidOnBeforeBrowser()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefExtensionHandler::OnBeforeBrowser(class CefNet.CefExtension, class CefNet.CefBrowser, class CefNet.CefBrowser, int32, string, bool, class CefNet.CefWindowInfo, class CefNet.CefClient&, class CefNet.CefBrowserSettings)
			ldftn instance bool CefNet.CefExtensionHandler::OnBeforeBrowser(class CefNet.CefExtension, class CefNet.CefBrowser, class CefNet.CefBrowser, int32, string, bool, class CefNet.CefWindowInfo, class CefNet.CefClient&, class CefNet.CefBrowserSettings)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefExtensionHandlerPrivate.AvoidGetActiveBrowser()
		{
			.override method instance bool CefNet.Internal.ICefExtensionHandlerPrivate::AvoidGetActiveBrowser()
			.maxstack 2
			ldarg.0
			ldvirtftn instance class CefNet.CefBrowser CefNet.CefExtensionHandler::GetActiveBrowser(class CefNet.CefExtension, class CefNet.CefBrowser, bool)
			ldftn instance class CefNet.CefBrowser CefNet.CefExtensionHandler::GetActiveBrowser(class CefNet.CefExtension, class CefNet.CefBrowser, bool)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefExtensionHandlerPrivate.AvoidCanAccessBrowser()
		{
			.override method instance bool CefNet.Internal.ICefExtensionHandlerPrivate::AvoidCanAccessBrowser()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefExtensionHandler::CanAccessBrowser(class CefNet.CefExtension, class CefNet.CefBrowser, bool, class CefNet.CefBrowser)
			ldftn instance bool CefNet.CefExtensionHandler::CanAccessBrowser(class CefNet.CefExtension, class CefNet.CefBrowser, bool, class CefNet.CefBrowser)
			ceq
			ret
		}

		.method private final hidebysig newslot virtual instance bool CefNet.Internal.ICefExtensionHandlerPrivate.AvoidGetExtensionResource()
		{
			.override method instance bool CefNet.Internal.ICefExtensionHandlerPrivate::AvoidGetExtensionResource()
			.maxstack 2
			ldarg.0
			ldvirtftn instance bool CefNet.CefExtensionHandler::GetExtensionResource(class CefNet.CefExtension, class CefNet.CefBrowser, string, class CefNet.CefGetExtensionResourceCallback)
			ldftn instance bool CefNet.CefExtensionHandler::GetExtensionResource(class CefNet.CefExtension, class CefNet.CefBrowser, string, class CefNet.CefGetExtensionResourceCallback)
			ceq
			ret
		}

	}
}
