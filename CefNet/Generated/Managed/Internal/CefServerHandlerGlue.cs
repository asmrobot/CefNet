// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_server_handler_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;
using CefNet.CApi;
using CefNet.Internal;

namespace CefNet.Internal
{
	sealed partial class CefServerHandlerGlue: CefServerHandler, ICefServerHandlerPrivate
	{
		private WebViewGlue _implementation;

		public CefServerHandlerGlue(WebViewGlue impl)
		{
			_implementation = impl;
		}

		bool ICefServerHandlerPrivate.AvoidOnServerCreated()
		{
			return _implementation.AvoidOnServerCreated();
		}

		protected internal unsafe override void OnServerCreated(CefServer server)
		{
			_implementation.OnServerCreated(server);
		}

		bool ICefServerHandlerPrivate.AvoidOnServerDestroyed()
		{
			return _implementation.AvoidOnServerDestroyed();
		}

		protected internal unsafe override void OnServerDestroyed(CefServer server)
		{
			_implementation.OnServerDestroyed(server);
		}

		bool ICefServerHandlerPrivate.AvoidOnClientConnected()
		{
			return _implementation.AvoidOnClientConnected();
		}

		protected internal unsafe override void OnClientConnected(CefServer server, int connectionId)
		{
			_implementation.OnClientConnected(server, connectionId);
		}

		bool ICefServerHandlerPrivate.AvoidOnClientDisconnected()
		{
			return _implementation.AvoidOnClientDisconnected();
		}

		protected internal unsafe override void OnClientDisconnected(CefServer server, int connectionId)
		{
			_implementation.OnClientDisconnected(server, connectionId);
		}

		bool ICefServerHandlerPrivate.AvoidOnHttpRequest()
		{
			return _implementation.AvoidOnHttpRequest();
		}

		protected internal unsafe override void OnHttpRequest(CefServer server, int connectionId, string clientAddress, CefRequest request)
		{
			_implementation.OnHttpRequest(server, connectionId, clientAddress, request);
		}

		bool ICefServerHandlerPrivate.AvoidOnWebSocketRequest()
		{
			return _implementation.AvoidOnWebSocketRequest();
		}

		protected internal unsafe override void OnWebSocketRequest(CefServer server, int connectionId, string clientAddress, CefRequest request, CefCallback callback)
		{
			_implementation.OnWebSocketRequest(server, connectionId, clientAddress, request, callback);
		}

		bool ICefServerHandlerPrivate.AvoidOnWebSocketConnected()
		{
			return _implementation.AvoidOnWebSocketConnected();
		}

		protected internal unsafe override void OnWebSocketConnected(CefServer server, int connectionId)
		{
			_implementation.OnWebSocketConnected(server, connectionId);
		}

		bool ICefServerHandlerPrivate.AvoidOnWebSocketMessage()
		{
			return _implementation.AvoidOnWebSocketMessage();
		}

		protected internal unsafe override void OnWebSocketMessage(CefServer server, int connectionId, IntPtr data, long dataSize)
		{
			_implementation.OnWebSocketMessage(server, connectionId, data, dataSize);
		}

	}
}
