// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_write_handler_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;
using CefNet.CApi;
using CefNet.Internal;

namespace CefNet.Internal
{
	sealed partial class CefWriteHandlerGlue: CefWriteHandler, ICefWriteHandlerPrivate
	{
		private WebViewGlue _implementation;

		public CefWriteHandlerGlue(WebViewGlue impl)
		{
			_implementation = impl;
		}

		bool ICefWriteHandlerPrivate.AvoidWrite()
		{
			return _implementation.AvoidWrite();
		}

		protected internal unsafe override long Write(IntPtr ptr, long size, long n)
		{
			return _implementation.Write(ptr, size, n);
		}

		bool ICefWriteHandlerPrivate.AvoidSeek()
		{
			return _implementation.AvoidSeek();
		}

		protected internal unsafe override int Seek(long offset, int whence)
		{
			return _implementation.Seek(offset, whence);
		}

		protected internal unsafe override long Tell()
		{
			return _implementation.Tell();
		}

		protected internal unsafe override int Flush()
		{
			return _implementation.Flush();
		}

		protected internal unsafe override bool MayBlock()
		{
			return _implementation.MayBlock();
		}

	}
}
