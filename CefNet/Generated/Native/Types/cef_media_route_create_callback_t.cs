// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_media_router_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;

namespace CefNet.CApi
{
	/// <summary>
	/// Callback structure for cef_media_router_t::CreateRoute. The functions of this
	/// structure will be called on the browser process UI thread.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public unsafe partial struct cef_media_route_create_callback_t
	{
		/// <summary>
		/// Base structure.
		/// </summary>
		public cef_base_ref_counted_t @base;

		/// <summary>
		/// void (*)(_cef_media_route_create_callback_t* self, cef_media_route_create_result_t result, const cef_string_t* error, _cef_media_route_t* route)*
		/// </summary>
		public void* on_media_route_create_finished;

		/// <summary>
		/// Method that will be executed when the route creation has finished. |result|
		/// will be CEF_MRCR_OK if the route creation succeeded. |error| will be a
		/// description of the error if the route creation failed. |route| is the
		/// resulting route, or NULL if the route creation failed.
		/// </summary>
		[NativeName("on_media_route_create_finished")]
		public unsafe void OnMediaRouteCreateFinished(CefMediaRouteCreateResult result, [Immutable]cef_string_t* error, cef_media_route_t* route)
		{
			fixed (cef_media_route_create_callback_t* self = &this)
			{
				((delegate* unmanaged[Stdcall]<cef_media_route_create_callback_t*, CefMediaRouteCreateResult, cef_string_t*, cef_media_route_t*, void>)on_media_route_create_finished)(self, result, error, route);
			}
		}
	}
}

