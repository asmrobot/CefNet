// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/internal/cef_types.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;

namespace CefNet.CApi
{
	/// <summary>
	/// Structure representing touch event information.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public unsafe partial struct cef_touch_event_t
	{
		/// <summary>
		/// Id of a touch point. Must be unique per touch, can be any number except -1.
		/// Note that a maximum of 16 concurrent touches will be tracked; touches
		/// beyond that will be ignored.
		/// </summary>
		public int id;

		/// <summary>
		/// X coordinate relative to the left side of the view.
		/// </summary>
		public float x;

		/// <summary>
		/// Y coordinate relative to the top side of the view.
		/// </summary>
		public float y;

		/// <summary>
		/// X radius in pixels. Set to 0 if not applicable.
		/// </summary>
		public float radius_x;

		/// <summary>
		/// Y radius in pixels. Set to 0 if not applicable.
		/// </summary>
		public float radius_y;

		/// <summary>
		/// Rotation angle in radians. Set to 0 if not applicable.
		/// </summary>
		public float rotation_angle;

		/// <summary>
		/// The normalized pressure of the pointer input in the range of [0,1].
		/// Set to 0 if not applicable.
		/// </summary>
		public float pressure;

		/// <summary>
		/// The state of the touch point. Touches begin with one CEF_TET_PRESSED event
		/// followed by zero or more CEF_TET_MOVED events and finally one
		/// CEF_TET_RELEASED or CEF_TET_CANCELLED event. Events not respecting this
		/// order will be ignored.
		/// </summary>
		public CefTouchEventType type;

		/// <summary>
		/// Bit flags describing any pressed modifier keys. See
		/// cef_event_flags_t for values.
		/// </summary>
		public uint modifiers;

		/// <summary>
		/// The device type that caused the event.
		/// </summary>
		public CefPointerType pointer_type;
	}
}

