// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_web_plugin_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;

namespace CefNet.CApi
{
	/// <summary>
	/// Information about a specific web plugin.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public unsafe partial struct cef_web_plugin_info_t
	{
		/// <summary>
		/// Base structure.
		/// </summary>
		public cef_base_ref_counted_t @base;

		/// <summary>
		/// cef_string_userfree_t (*)(_cef_web_plugin_info_t* self)*
		/// </summary>
		public void* get_name;

		/// <summary>
		/// Returns the plugin name.
		/// The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		[NativeName("get_name")]
		public unsafe cef_string_userfree_t GetName()
		{
			fixed (cef_web_plugin_info_t* self = &this)
			{
				return ((delegate* unmanaged[Stdcall]<cef_web_plugin_info_t*, cef_string_userfree_t>)get_name)(self);
			}
		}

		/// <summary>
		/// cef_string_userfree_t (*)(_cef_web_plugin_info_t* self)*
		/// </summary>
		public void* get_path;

		/// <summary>
		/// Returns the plugin file path (DLL/bundle/library).
		/// The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		[NativeName("get_path")]
		public unsafe cef_string_userfree_t GetPath()
		{
			fixed (cef_web_plugin_info_t* self = &this)
			{
				return ((delegate* unmanaged[Stdcall]<cef_web_plugin_info_t*, cef_string_userfree_t>)get_path)(self);
			}
		}

		/// <summary>
		/// cef_string_userfree_t (*)(_cef_web_plugin_info_t* self)*
		/// </summary>
		public void* get_version;

		/// <summary>
		/// Returns the version of the plugin (may be OS-specific).
		/// The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		[NativeName("get_version")]
		public unsafe cef_string_userfree_t GetVersion()
		{
			fixed (cef_web_plugin_info_t* self = &this)
			{
				return ((delegate* unmanaged[Stdcall]<cef_web_plugin_info_t*, cef_string_userfree_t>)get_version)(self);
			}
		}

		/// <summary>
		/// cef_string_userfree_t (*)(_cef_web_plugin_info_t* self)*
		/// </summary>
		public void* get_description;

		/// <summary>
		/// Returns a description of the plugin from the version information.
		/// The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		[NativeName("get_description")]
		public unsafe cef_string_userfree_t GetDescription()
		{
			fixed (cef_web_plugin_info_t* self = &this)
			{
				return ((delegate* unmanaged[Stdcall]<cef_web_plugin_info_t*, cef_string_userfree_t>)get_description)(self);
			}
		}
	}
}

