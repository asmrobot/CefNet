// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: include/capi/cef_dialog_handler_capi.h
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;

namespace CefNet.CApi
{
	/// <summary>
	/// Implement this structure to handle dialog events. The functions of this
	/// structure will be called on the browser process UI thread.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public unsafe partial struct cef_dialog_handler_t
	{
		/// <summary>
		/// Base structure.
		/// </summary>
		public cef_base_ref_counted_t @base;

		/// <summary>
		/// int (*)(_cef_dialog_handler_t* self, _cef_browser_t* browser, cef_file_dialog_mode_t mode, const cef_string_t* title, const cef_string_t* default_file_path, cef_string_list_t accept_filters, int selected_accept_filter, _cef_file_dialog_callback_t* callback)*
		/// </summary>
		public void* on_file_dialog;

		/// <summary>
		/// Called to run a file chooser dialog. |mode| represents the type of dialog
		/// to display. |title| to the title to be used for the dialog and may be NULL
		/// to show the default title (&quot;Open&quot; or &quot;Save&quot; depending on the mode).
		/// |default_file_path| is the path with optional directory and/or file name
		/// component that should be initially selected in the dialog. |accept_filters|
		/// are used to restrict the selectable file types and may any combination of
		/// (a) valid lower-cased MIME types (e.g. &quot;text/*&quot; or &quot;image/*&quot;), (b)
		/// individual file extensions (e.g. &quot;.txt&quot; or &quot;.png&quot;), or (c) combined
		/// description and file extension delimited using &quot;|&quot; and &quot;;&quot; (e.g. &quot;Image
		/// Types|.png;.gif;.jpg&quot;). |selected_accept_filter| is the 0-based index of
		/// the filter that should be selected by default. To display a custom dialog
		/// return true (1) and execute |callback| either inline or at a later time. To
		/// display the default dialog return false (0).
		/// </summary>
		[NativeName("on_file_dialog")]
		public unsafe int OnFileDialog(cef_browser_t* browser, CefFileDialogMode mode, [Immutable]cef_string_t* title, [Immutable]cef_string_t* default_file_path, cef_string_list_t accept_filters, int selected_accept_filter, cef_file_dialog_callback_t* callback)
		{
			fixed (cef_dialog_handler_t* self = &this)
			{
				return ((delegate* unmanaged[Stdcall]<cef_dialog_handler_t*, cef_browser_t*, CefFileDialogMode, cef_string_t*, cef_string_t*, cef_string_list_t, int, cef_file_dialog_callback_t*, int>)on_file_dialog)(self, browser, mode, title, default_file_path, accept_filters, selected_accept_filter, callback);
			}
		}
	}
}

